  <%_ const fieldType = field.fieldType; _%>
  <%_ const fieldName = field.fieldName; _%>
  <%_ const fieldIsEnum = field.fieldIsEnum; _%>
  { this.state.baseFilters !== '<%= fieldName %>' ? 
  <%_ if (typeof field.listTableLayoutAllowEdit == "undefined" ||  field.listTableLayoutAllowEdit == "false"){ _%>
    <td id="<%=fieldName%>-cell">
      <b className="visible-xs"> <%= field.fieldNameHumanized %> </b>
      <%_ if (fieldType === 'Boolean') { _%>
        {<%= entityInstance %>.<%=field.fieldName%> ? 'true' : 'false'}
      <%_ } else if (fieldType === 'Instant' || fieldType === 'ZonedDateTime') { _%>
        <TextFormat type="date" value={<%= entityInstance %>.<%=fieldName%>} format={APP_DATE_FORMAT} />
      <%_ } else if (fieldType === 'LocalDate') { _%>
        <TextFormat type="date" value={<%= entityInstance %>.<%=fieldName%>} format={APP_LOCAL_DATE_FORMAT} />
      <%_ } else if (fieldIsEnum && enableTranslation) { _%>
        <Translate contentKey={`<%= angularAppName %>.<%= fieldType %>.${<%= entityInstance %>.<%= fieldName %>}`} />
      <%_ } else if (['byte[]', 'ByteBuffer'].includes(fieldType)) { _%>
        <%_
          // blobFields
          const fieldBlobType = field.fieldTypeBlobContent;
          if (fieldBlobType !== 'text') {
        _%>
          {<%= entityInstance %>.<%= fieldName %> ? (
            <div>
              <a rel="noopener noreferrer" target={"_blank"} href={`${<%= entityInstance %>.<%= fieldName %>}`}>
                { (<%= entityInstance %>.<%= fieldName %>ContentType && <%= entityInstance %>.<%= fieldName %>ContentType.includes("image/")) ? 
                  <img src={`${<%= entityInstance %>.<%= fieldName %>}`} style={{ maxHeight: '30px' }} />
                  :
                  (<Translate contentKey="entity.action.open">Open2</Translate>)
                } 
              </a>
            </div>
          ) : null}
        <%_ } else { _%>
          {<%= entityInstance %>.<%= fieldName %> ? (Buffer.from(<%= entityInstance %>.<%= fieldName %>)).toString() : null }
        <%_ } _%>
      <%_ } else { _%>
        {<%= entityInstance %>.<%= fieldName %>}
      <%_ } _%>
    </td>
  <%_ } else { _%>
    <td id="<%=fieldName%>-cell"> 
        <b className="visible-xs"> <%= field.fieldNameHumanized %> </b>
        <%_ if (fieldType === 'Boolean') { _%>
            <AvInput id="<%= entityFileName %>-<%= fieldName %>" type="checkbox" className="form-control" name="<%= fieldName %>" />
        <%_ } else if (['Instant', 'ZonedDateTime'].includes(fieldType)) { _%>
            <AvInput id="<%= entityFileName %>-<%= fieldName %>" type="datetime-local" className="form-control"
              name="<%= fieldName %>" placeholder={"YYYY-MM-DD HH:mm"} value={isNew ? null :
              convertDateTimeFromServer(this.props.<%= entityInstance %>Entity.<%= fieldName %>)}
               />
        <%_ } else if (fieldType === 'LocalDate') { _%>
            <AvField id="<%= entityFileName %>-<%= fieldName %>" type="date" className="form-control" name="<%= fieldName %>" />
        <%_ } else if ( field.fieldIsEnum) { const values =  field.fieldValues.replace(/\s/g, '').split(','); _%>
        <AvInput id="<%= entityFileName %>-<%= fieldName %>" type="select" className="form-control"
          name="<%= fieldName %>" value={(!isNew && <%= entityInstance %>Entity.<%= fieldName%>) || '<%= values[0] %>' }>
         
          <%_ const enumPrefix = angularAppName + '.'+ fieldType;
            for (key in values) { const value = values[key]; _%>
          <option value="<%= value %>"> <%_ if (enableTranslation) { _%> {translate("<%= enumPrefix %>.<%= value %>")} <%_ } else { _%> <%= value %> <%_ } _%> </option>
          <%_ } _%>
        </AvInput>
        <%_ } else if (['Integer', 'Long', 'Float', 'Double'].includes(fieldType)) { _%>
              <AvField id="<%= entityFileName %>-<%= fieldName %>" type="string" className="form-control" name="<%= fieldName %>" /> 
        <%_ } else if (['byte[]', 'ByteBuffer'].includes(fieldType)) {
            const fieldBlobType =  field.fieldTypeBlobContent;
            if (fieldBlobType !== 'text') {
              const isAnImage = fieldBlobType === 'image';
              const capitalizedFirstLetter =  _.upperFirst(fieldName);
        _%>
      
                    {(<%= fieldName %> || <%= fieldName %>Base64)  ? (
                    <div>
                      <Row>
                        <Col md="11">
                        </Col>
                        <Col md="1">
                        <Button color="danger" onClick={this.clearBlob('<%= fieldName %>')}>
                          <FontAwesomeIcon icon="times-circle" /></Button>
                        </Col>
                      </Row>
                      <a rel="noopener noreferrer" target={"_blank"} href={`${<%= fieldName %>}`}>
                        <%_ if (isAnImage) { _%>
                        <img src={`${<%= fieldName %>Base64  ? ('data:'+<%= fieldName %>ContentType+';base64,'+arquivoBase64) : <%= fieldName %>}`}
                          style={{ maxHeight: '100px' }} />
                        <%_ } else { _%>
                        <Translate contentKey="entity.action.open">Open</Translate>
                        <%_ } _%>
                      </a>
                      <br />
                    </div>
                    ) : null}
                    <input id="file_<%= fieldName %>" type="file" ref={this.<%= fields[idx].fieldName %>FileInput} onChange={this.onBlobChange(<%= isAnImage %>, '<%= fieldName %>', this.<%= fields[idx].fieldName %>FileInput
                      )} <% if (isAnImage) { %>accept="image/*" <% } %> />
                    <AvInput type="hidden"  name="<%= fieldName %>" value={<%= fieldName %>}  />
      <%_ } else { _%>
        <textarea className="form-control" defaultValue={<%= entityFileName %>.<%= fieldName %>}  onBlur={ v=> this.props.updateEntity({...<%= entityFileName %>, <%= fieldName %>:v.target.value }) }  />
      <%_ } _%>
    <%_ } else { _%>
      
          <input className="form-control" type="text" defaultValue={<%= entityFileName %>.<%= fieldName %>}  onBlur={ v=> this.props.updateEntity({...<%= entityFileName %>, <%= fieldName %>:v.target.value }) }  />
    <%_ } _%>
    <%_ if ( field.javadoc) { _%>
      <UncontrolledTooltip target="<%= fieldName %>Label">
        <%_ if (enableTranslation) { _%>
          <Translate contentKey="<%= i18nKeyPrefix %>.help.<%= fieldName %>" />
        <%_ } else { _%>
          <%=  field.javadoc %>
        <%_ } _%>
      </UncontrolledTooltip>
    <%_ } _%>
    </td>
  <%_ }  _%>
  : null }
