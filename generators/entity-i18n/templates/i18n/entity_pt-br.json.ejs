<%#
 Copyright 2013-2020 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 -%><%
let helpBlocks = 0; %>
{
    "<%= angularAppName %>": {
        "<%= entityTranslationKey %>" : {
            "listSelectedButtons": {
                "clearSelect":"Limpar Seleção",
                "selectAll":"Selecionar os {{totalItems}} <%= entityClassPluralHumanizedPt %>",
                "allItensAreSelected":"Os {{totalItems}} <%= entityClassPluralHumanizedPt %> nesta página estão selecionados.",
                "allItensAreSelectedThisPage":"Todos os {{itemsPerPage}} <%= entityClassPluralHumanizedPt %> nesta página estão selecionados.",
                "allItensAreSelectedAllPages":"Todas os {{totalItems}} <%= entityClassPluralHumanizedPt %> estão selecionados.",
                <% if (typeof listSelectedButtons !== "undefined") { for (idx in listSelectedButtons) { %>
                    "<%= listSelectedButtons[idx].name %>": "<%= listSelectedButtons[idx].attributes && listSelectedButtons[idx].attributes.text ? listSelectedButtons[idx].attributes.text : listSelectedButtons[idx].name  
                %>",<% } } %>
            },
            "listTopButtons": {
                <% if (typeof listTopButtons !== "undefined") { for (idx in listTopButtons) { %>
                    "<%= listTopButtons[idx].name %>": "<%= listTopButtons[idx].attributes && listTopButtons[idx].attributes.text ? listTopButtons[idx].attributes.text : listTopButtons[idx].name  
                %>",<% } } %>
            },
            "listButtons": {
                <% for (idx in listButtons) { %>
                    "<%= listButtons[idx].name %>": "<%= listButtons[idx].attributes && listButtons[idx].attributes.text ? listButtons[idx].attributes.text : listButtons[idx].name  
                %>",<% } %>
            },
            "viewButtons": {
                <% for (idx in viewButtons) { %>
                    "<%= viewButtons[idx].name %>": "<%= viewButtons[idx].attributes && viewButtons[idx].attributes.text ? viewButtons[idx].attributes.text : viewButtons[idx].name  
                %>",<% } %>
            },
            <%_ for (let i in listTableLayout) { %>
                <%_ if (listTableLayout[i].type == "sub-relationship" ) { %>
                    "<%= listTableLayout[idx].entity.relationshipName %>": "<%= listTableLayout[idx].attributes && listTableLayout[idx].attributes.text ? listTableLayout[idx].attributes.text : listTableLayout[idx].entity.relationshipNameHumanized  
                    %>",
                <%_ } %>
            <%_ } %>
            "dropdown_btn": "Actions",
            "home": {
                "title": "<%= typeof entityClassPluralHumanizedPt !== 'undefined' ? entityClassPluralHumanizedPt : entityClassPluralHumanized %>",
                "btn_filter": "Filtrar",
                "btn_filter_clean": "Limpar Filtros",
                "btn_filter_open": "Filtros",
                "createLabel": "Criar novo <%= typeof entityClassHumanizedPt !== 'undefined' ? entityClassHumanizedPt : entityClassHumanized %>",
                "editLabel": "Editar <%= typeof entityClassHumanizedPt !== 'undefined' ? entityClassHumanizedPt : entityClassHumanized %>",
                "createOrEditLabel": "Criar ou editar <%= typeof entityClassHumanizedPt !== 'undefined' ? entityClassHumanizedPt : entityClassHumanized %>"<% if (searchEngine === 'elasticsearch') { %>,
                "search": "Pesquisar por <%= typeof entityClassHumanizedPt !== 'undefined' ? entityClassHumanizedPt : entityClassHumanized %>"<% } %>,
                "notFound": "Nenhum <%= typeof entityClassHumanizedPt !== 'undefined' ? entityClassHumanizedPt : entityClassHumanized %> encontrado"
            },<% if (!microserviceAppName) { %>
            "created": "Um novo <%= typeof entityClassHumanizedPt !== 'undefined' ? entityClassHumanizedPt : entityClassHumanized %> foi criado com o identificador {{ param }}",
            "updated": "Um <%= typeof entityClassHumanizedPt !== 'undefined' ? entityClassHumanizedPt : entityClassHumanized %> foi atualizado com o identificador {{ param }}",
            "deleted": "Um <%= typeof entityClassHumanizedPt !== 'undefined' ? entityClassHumanizedPt : entityClassHumanized %> foi excluído com o identificador {{ param }}",<% } %>
            "delete": {
                "question": "Tem certeza de que deseja excluir?"
            },
            "field_id": "ID",
            "btnNewItem": "<%= typeof btnNewItemPt !== 'undefined' ? btnNewItemPt : ("Criar novo "  + (typeof entityClassHumanizedPt !== 'undefined' ? entityClassHumanizedPt : entityClassHumanized) ) %>",
            "btnFilter": "<%= typeof btnFilterPt !== 'undefined' ? btnFilterPt : "Filtrar" %>",
            "btnOpenFilter": "<%= typeof btnOpenFilterPt !== 'undefined' ? btnOpenFilterPt : "Filtrar" %>",
            "btnCleanFilter": "<%= typeof btnCleanFilterPt !== 'undefined' ? btnCleanFilterPt : "Limpar Filtro" %>",
            "btnEditItem": "<%= typeof btnEditItemPt !== 'undefined' ? btnEditItemPt : "Editar" %>",
            "btnActions": "<%= typeof btnActionsPt !== 'undefined' ? btnActionsPt : "Ações" %>",
            "btnSave": "<%= typeof btnSavePt !== 'undefined' ? btnSavePt : "Salvar" %>",
            "btnBack": "<%= typeof btnBackPt !== 'undefined' ? btnBackPt : "Ir na listagem" %>",
            "btnCancel": "<%= typeof btnCancelPt !== 'undefined' ? btnCancelPt : "Cancelar" %>",
            "btnDelete": "<%= typeof btnDeletePt !== 'undefined' ? btnDeletePt : "Apagar" %>",
            "btnOpen": "<%= typeof btnOpenPt !== 'undefined' ? btnOpenPt : "Abrir" %>",
            "createdDate" : "Data criação",
            "lastModifiedDate" : "Data modificação",
            "createdBy" : "Criado por",
            "lastModifiedBy" : "Modificado por",
            <% for (idx in fields) { %>
                <%_ if (['byte[]', 'ByteBuffer'].includes(fields[idx].fieldType)) { _%>
                    "upload_<%= fields[idx].fieldName %>": "Subir <%= typeof entityClassHumanizedPt !== 'undefined' ? entityClassHumanizedPt : entityClassHumanized  %>",
                <%_ } else if (fields[idx].fieldType === 'Boolean') { _%>
                    "<%= fields[idx].fieldName %>_filter_all": "Indiferente",
                    "<%= fields[idx].fieldName %>_filter_with": "Ativo",
                    "<%= fields[idx].fieldName %>_filter_without": "Inativo",
                <% } %>
            <% } %>
            "detail": {
                "title": "<%= typeof entityClassHumanizedPt !== 'undefined' ? entityClassHumanizedPt : entityClassHumanized %>"
            }<% for (idx in fields) { %>
                <% if (idx in fields) { 
                    %>,"<%= fields[idx].fieldName %>_start": "<%= fields[idx].fieldNameHumanizedPt %> (Inicio)"
                      ,"<%= fields[idx].fieldName %>_end": "<%= fields[idx].fieldNameHumanizedPt %> (Fim)"<%
                 } %>
                <% } %><% for (idx in fields) {
            if (typeof fields[idx].clean_javadoc !== 'undefined') ++helpBlocks; %>,
            "<%= fields[idx].fieldName %>": "<%= fields[idx].fieldNameHumanizedPt ? fields[idx].fieldNameHumanizedPt  : fields[idx].fieldNameHumanized %>"<% } %><% for (idx in relationships) { %>,
            "<%= relationships[idx].relationshipName %>_empty": "Sem <%= relationships[idx].relationshipNameHumanized %>",
            "<%= relationships[idx].relationshipName %>-modal-super-select-title": "Selecione...",
            "<%= relationships[idx].relationshipName %>": "<%= relationships[idx].relationshipNameHumanized %>"<% } if (helpBlocks > 0) { %>,
            "help": {<% for (idx in fields) {
                if (fields[idx].clean_javadoc) {
                    --helpBlocks; %>
                "<%= fields[idx].fieldName %>": "<%= fields[idx].clean_javadoc %>"<% if (helpBlocks > 0) { %>,<% }
                }
            } %>
            }<% } %>
        }
    }<% if (microserviceAppName) { %>,
    "<%= microserviceAppName %>": {
        "<%= entityTranslationKey %>" : {
            "created": "Um novo <%= typeof entityClassHumanizedPt !== 'undefined' ? entityClassHumanizedPt : entityClassHumanized %> foi criado com o identificador {{ param }}",
            "updated": "Um <%= typeof entityClassHumanizedPt !== 'undefined' ? entityClassHumanizedPt : entityClassHumanized %> foi atualizado com o identificador {{ param }}",
            "deleted": "Um <%= typeof entityClassHumanizedPt !== 'undefined' ? entityClassHumanizedPt : entityClassHumanized %> foi excluído com o identificador {{ param }}"
        }
    }<% } %>
}
